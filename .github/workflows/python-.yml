name: Build and Publish

on:
  push:
    branches:
      - main

jobs:
  build:
    permissions: write-all
    runs-on: windows-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.11

    - name: Install Dependencies
      run: |
        pip install pillow httpx easygui pyinstaller # 如果有依赖，替换成你的依赖文件
        
    - name: Build Windows Executable
      run: |
        # if [ "$(git log -1 --pretty=%B)" = "new version" ]; then
        #   pyinstaller --onefile Whiteboard.py --output dist/Whiteboard.exe -i Whiteboard.ico # 替换成你的脚本文件名
        #   pyinstaller --onefile updata.py --output dist/updata.exe -i Whiteboard.ico
        # fi
        pyinstaller --onefile Whiteboard.py --distpath dist -i Whiteboard.ico # 替换成你的脚本文件名
        pyinstaller --onefile updata.py --distpath dist -i Whiteboard.ico
        
    # - name: Read Version from v.json
    #   id: read_version
    #   run: |
    #     $version = Get-Content -Raw -Path v.json | ConvertFrom-Json | Select-Object -ExpandProperty version
    #     Write-Output "Version read from v.json: $version"
    #     echo "::set-output name=version::$version"
        
    # - name: read sha1
    #   id: read_sha1
    #   run: |
    #     $short_sha = $env:GITHUB_SHA.Substring(0, 7)
    #     echo "::set-output name=sha::$short_sha"
        
    # - name: Create test Release
    #   # if: contains(github.event.head_commit.message, 'new version')
    #   id: create_test_release
    #   uses: softprops/action-gh-release@v1
    #   with:
    #     tag_name: ${{ steps.read_sha1.outputs.sha }}
    #     files: |
    #       dist/Whiteboard.exe
    #       dist/updata.exe
    #     token: ${{ secrets.GITHUB_TOKEN }}
    #     # release_name: Release ${{ github.event.after }}
        
    - name: install 7-zip
      id: install-7-zip
      run: winget install 7zip

    - name: build install application by 7z
      id: build-with-7z
      run: 7z.exe a -sfx Whiteboard-build.exe dist/Whiteboard.exe dist/updata.exe

    - name: Create Release
      # if: contains(github.event.head_commit.message, 'new version')
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: 'pre-build'
        # release_name: Release ${{ github.ref_name }}
        prerelease: true
        files: Whiteboard-build.exe
        token: ${{ secrets.GITHUB_TOKEN }}
        # release_name: Release ${{ github.event.after }}
